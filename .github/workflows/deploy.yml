name: Deploy Frontend to GitHub Pages # Nome do seu workflow

on:
  push:
    branches:
      - main # Dispara o workflow sempre que houver um push para a branch 'main' (ou 'master', se for a sua)
  workflow_dispatch: # Permite que você execute o workflow manualmente na aba "Actions" do GitHub

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest # O tipo de máquina virtual que executará as ações

    steps:
    - name: Checkout repository # Passo 1: Clona o seu repositório
      uses: actions/checkout@v4

    - name: Set up Node.js # Passo 2: Configura o ambiente Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20' # Use a versão do Node.js que você está usando (ou uma compatível)
        cache: 'npm' # Habilita cache para as dependências do npm
        publish_branch: gh-pages

    - name: Install dependencies # Passo 3: Instala as dependências do seu projeto
      run: npm install

    - name: Build frontend # Passo 4: Constrói a aplicação frontend
      run: npm run build # Comando para construir seu projeto Vite (verifica seu package.json)
      env: # Variáveis de ambiente que serão acessíveis durante o build
        # VITE_APP_API_URL é o prefixo que o Vite espera
        # VITE_APP_RENDER_BACKEND_URL é o nome do Secret que criamos
        VITE_APP_API_URL: ${{ secrets.VITE_APP_RENDER_BACKEND_URL }} # Injeta a URL do backend do Render aqui!

    - name: Deploy to GitHub Pages # Passo 5: Implanta a aplicação no GitHub Pages
      uses: peaceiris/actions-gh-pages@v4 # Action de terceiros para deploy no GH Pages
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }} # Token padrão fornecido pelo GitHub
        publish_dir: ./dist # O diretório onde o Vite gera os arquivos de build (geralmente 'dist')
        # Se você estiver usando Create-React-App, o diretório é './build'
        # certifique-se de que este caminho está correto para o seu projeto Vite
